// Generated by Dirk Generator, don't modify by hand

// ignore_for_file: unused_import, unused_local_variable
import 'package:itblog/models/data.dart';

import 'package:dirk/sanitize.dart';

import 'package:itblog/controllers/helpers.dart';

String ArchivesShowView(List<Post> model,
    {Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res += ''' <div id="main-column"> <h1>''';
  res += '''${sanitize(viewData["title"])}''';
  res += '''</h1> ''';
  for (var i = 0; i < model.length; i++) {
    res += '''${PartialPostsPreviewView(model[i], viewData: viewData)}''';
  }
  res += ''' </div>''';
  return LayoutView(res, viewData: viewData);
}

String AuthSigninView({Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  viewData['title'] = 'Вход в систему';
  res += ''' <div class="auth-card"> <form method="post"> <h4>Войти</h4> ''';
  res += '''${PartialSharedMessagesView(viewData: viewData)}''';
  res +=
      ''' <label for="email">Эл. почта</label> <input id="email" name="email" type="email" placeholder="me@example.com" required> <label for="password">Пароль</label> <input id="password" name="password" type="password" placeholder="Пароль" required> ''';
  if (viewData['error'] == '1') {
    res += ''' <p class="text-danger">Неверный логин или пароль.</p> ''';
  }
  res +=
      ''' <button id="signin" name="signin" class="btn btn-primary">Войти</button> </form> </div> ''';
  return LayoutView(res, viewData: viewData);
}

String AuthSignupView({Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  viewData['title'] = 'Регистрация';
  res +=
      ''' <div class="auth-card"> <form method="post"> <h4>Регистрация</h4> ''';
  res += '''${PartialSharedMessagesView(viewData: viewData)}''';
  res +=
      ''' <label for="name">Имя</label> <input id="name" name="name" placeholder="Ваше имя" required> <label for="email">Эл. почта</label> <input id="email" name="email" type="email" placeholder="Ваша эл. почта" required> <label for="password">Пароль</label> <input id="password" name="password" type="password" placeholder="Ваш пароль" required> <label for="passwordrepeat">Повторите пароль</label> <input id="passwordrepeat" name="passwordrepeat" type="password" placeholder="Ваш пароль" required> ''';
  if (viewData['error'] == '1') {
    res +=
        ''' <p class="text-danger">Пользователь с такой почтой уже существует</p> ''';
  }
  if (viewData['error'] == '2') {
    res += ''' <p class="text-danger">Внимательно заполните поля</p> ''';
  }
  res +=
      ''' <button id="signup" name="signup" class="btn btn-primary">Регистрация</button> </form> </div> ''';
  return LayoutView(res, viewData: viewData);
}

String CommentsFormView(Comment model,
    {Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  viewData['title'] = 'Создание / Редактирование Комментария';
  res +=
      ''' <div class="main-content" role="main"> <form method="post"> <h3>''';
  res += '''${sanitize(viewData["title"])}''';
  res += '''</h3> ''';
  res += '''${PartialSharedMessagesView(viewData: viewData)}''';
  res += ''' <input type="hidden" name="id" value="''';
  res += '''${sanitize(model.id)}''';
  res +=
      '''" > <label for="content">Содержание</label> <textarea name="content" id="content">''';
  res += '''${sanitize(model.content)}''';
  res += '''</textarea> ''';
  if (model.post != null) {
    res += ''' <label for="post_id">Пост: <a href="''';
    res += '''${sanitize(model.post!.url)}''';
    res += '''">''';
    res += '''${sanitize(model.post!.title)}''';
    res += '''</a></label> ''';
  }
  res += ''' <label for="user_name">Пользователь: ''';
  res += '''${sanitize(model.plainName)}''';
  res +=
      '''</label> <div class="d-flex mb-10"> <input id="published" name="published" type="checkbox" value="1" ''';
  if (model.published == 1) {
    res += '''checked''';
  }
  res +=
      '''> <label for="published">Опубликовать</label> </div> <button type="submit" class="btn btn-primary">Отправить</button> <a class="btn btn-secondary" href="/admin/comments">Отмена</a> </form> </div> ''';
  return LayoutDashboardView(res, viewData: viewData);
}

String CommentsIndexView(List<Comment> model,
    {Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  viewData['title'] = 'Комментарии';
  res += ''' <div class="main-content" role="main"> <h2>''';
  res += '''${sanitize(viewData["title"])}''';
  res +=
      '''</h2> <table> <thead> <tr> <th class="shrink">№</th> <th>Имя</th> <th>Комментарий</th> <th class="shrink">Опубликовано</th> <th class="shrink">Действия</th> </tr> </thead> <tbody> ''';
  for (var i = 0; i < model.length; i++) {
    var comment = model[i];
    res += ''' <tr> <td class="shrink">''';
    res += '''${sanitize(comment.id)}''';
    res += '''</td> <td>''';
    res += '''${sanitize(comment.plainName)}''';
    res += '''</td> <td>''';
    res += '''${sanitize(comment.excerpt)}''';
    res += '''</td> <td class="shrink"> ''';
    if (comment.published == 1) {
      res += '''${PartialSharedMdiCheckView(viewData: viewData)}''';
    } else {
      res += '''${PartialSharedMdiMinusView(viewData: viewData)}''';
    }
    res += ''' </td> <td class="shrink"> <a href="''';
    res += '''${sanitize(comment.url)}''';
    res += '''" class="btn btn-secondary">''';
    res += '''${PartialSharedMdiEyeView(viewData: viewData)}''';
    res += '''</a> <a href="''';
    res += '''${sanitize(comment.editUrl)}''';
    res += '''" class="btn btn-primary">''';
    res += '''${PartialSharedMdiPencilView(viewData: viewData)}''';
    res += '''</a> <form class="inline-block" action="''';
    res += '''${sanitize(comment.deleteUrl)}''';
    res +=
        '''" method="post"> <button type="button" class="btn btn-danger" onclick="((confirm('Вы уверены?')) ? this.form.submit() : null);">''';
    res += '''${PartialSharedMdiDeleteView(viewData: viewData)}''';
    res += '''</button> </form> </td> </tr> ''';
  }
  res +=
      ''' </tbody> </table> <div class="actions"> <a href="/admin/new_comment" class="btn btn-primary">Новый комментарий</a> </div> </div> ''';
  return LayoutDashboardView(res, viewData: viewData);
}

String PartialCommentsPublicFormView(Comment model,
    {Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res +=
      ''' <form method="post" action="/comments/new"> <input type="hidden" name="post_id" value="''';
  res += '''${sanitize(model.postId)}''';
  res +=
      '''"> <input type="text" name="user_name" placeholder="Представьтесь" required> <textarea name="content" placeholder="Введите ваш комментарий" id="content" required></textarea> <button type="submit" class="btn btn-primary">Отправить</button> </form> ''';
  return res;
}

String DashboardShowView({Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res +=
      ''' <div class="main-content" role="main"> <div class="jumbotron"> <h2>''';
  res += '''${sanitize(viewData["title"])}''';
  res +=
      '''</h2> This is a blog boilerplate created in Go using <a href="https://github.com/gin-gonic/gin">GIN</a> web microframework, <a href="http://www.gorillatoolkit.org/pkg/sessions">Gorilla web toolkit sessions</a> and <a href="http://gorm.io">gorm</a> <br> <br> It provides essentials that most web applications need - MVC pattern user authorisation, database migrations, CSRF protection, admin dashboard, static pages and much more... <br> <br> Project's source code can be found here: <br> <br> <div class="well"> <a href="https://github.com/denisbakhtin/itblog">https://github.com/denisbakhtin/itblog</a> </div> </div> </div>''';
  return LayoutDashboardView(res, viewData: viewData);
}

String PartialDashboardFooterView({Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  return res;
}

String PartialDashboardNavbarView({Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res +=
      '''<!-- Fixed navbar --> <nav class="navbar" role="navigation"> <div class="container-fluid"> <ul> <li> <a href="/">''';
  res += '''${PartialSharedMdiWebView(viewData: viewData)}''';
  res += ''' Сайт</a> </li> <li> <a href="/auth/signout">''';
  res += '''${PartialSharedMdiLogoutView(viewData: viewData)}''';
  res += ''' Выйти</a> </li> </ul> </div> </nav> ''';
  return res;
}

String PartialDashboardSidebarView({Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  var user = viewData['user'];
  res += ''' <aside class="dashboard-sidebar"> <nav> <ul> <li> <a href="''';
  res += '''${sanitize(Post.indexUrl)}''';
  res += '''">''';
  res += '''${PartialSharedMdiChevronRightView(viewData: viewData)}''';
  res += ''' Записи</a> </li> <li> <a href="''';
  res += '''${sanitize(Tag.indexUrl)}''';
  res += '''">''';
  res += '''${PartialSharedMdiChevronRightView(viewData: viewData)}''';
  res += ''' Тэги</a> </li> <li> <a href="''';
  res += '''${sanitize(Comment.indexUrl)}''';
  res += '''">''';
  res += '''${PartialSharedMdiChevronRightView(viewData: viewData)}''';
  res += ''' Комментарии</a> </li> <li> <a href="''';
  res += '''${sanitize(Page.indexUrl)}''';
  res += '''">''';
  res += '''${PartialSharedMdiChevronRightView(viewData: viewData)}''';
  res += ''' Страницы</a> </li> <li> <a href="''';
  res += '''${sanitize(Subscriber.indexUrl)}''';
  res += '''">''';
  res += '''${PartialSharedMdiChevronRightView(viewData: viewData)}''';
  res += ''' Подписчики</a> </li> <li> <a href="''';
  res += '''${sanitize(User.indexUrl)}''';
  res += '''">''';
  res += '''${PartialSharedMdiChevronRightView(viewData: viewData)}''';
  res += ''' Пользователи</a> </li> <li> <a href="''';
  res += '''${sanitize(user.editUrl)}''';
  res += '''">''';
  res += '''${PartialSharedMdiChevronRightView(viewData: viewData)}''';
  res += '''</i> Аккаунт</a> </li> </ul> </nav> </aside> ''';
  return res;
}

String Errors400View(String model, {Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res +=
      ''' <div id="main-column"> <div class="error text-center"> <h1>400 ошибка</h1> <div class="description"> ''';
  if (model.isNotEmpty) {
    res += '''${sanitize(model)}''';
  } else {
    res += ''' Похоже, плохой запрос! ''';
  }
  res +=
      ''' </div> <div class="mt-2"> <a class="btn btn-secondary" onclick="window.history.back();" href="#">Назад</a> </div> </div> </div> ''';
  return LayoutView(res, viewData: viewData);
}

String Errors403View({Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res +=
      '''<div id="main-column"> <div class="error text-center"> <h1>403 Ошибка</h1> <div class="description"> Похоже, доступ запрещен! </div> <div class="mt-2"> <a class="btn btn-secondary" onclick="window.history.back();" href="#">Назад</a> </div> </div> </div> ''';
  return LayoutView(res, viewData: viewData);
}

String Errors404View({Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res +=
      '''<div id="main-column"> <div class="error text-center"> <h1>404 Ошибка</h1> <div class="description"> Похоже, страница не найдена! </div> <div class="mt-2"> <a class="btn btn-secondary" onclick="window.history.back();" href="#">Назад</a> </div> </div> </div> ''';
  return LayoutView(res, viewData: viewData);
}

String Errors500View(String model, {Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res +=
      ''' <div id="main-column"> <div class="error text-center"> <h1>500 Ошибка</h1> <div class="description"> ''';
  if (model != null && model.isNotEmpty) {
    res += '''${sanitize(model)}''';
  } else {
    res += ''' Похоже, что-то пошло не так! ''';
  }
  res +=
      ''' </div> <div class="mt-2"> <a class="btn btn-secondary" onclick="window.history.back();" href="#">Назад</a> </div> </div> </div> ''';
  return LayoutView(res, viewData: viewData);
}

String HomeShowView({Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  var recentPosts = getRecentPosts();
  res += ''' <div id="main-column" class="mr-0"> ''';
  for (var i = 0; i < recentPosts.length; i++) {
    res += '''${PartialPostsPreviewView(recentPosts[i], viewData: viewData)}''';
  }
  res += ''' </div> ''';
  return LayoutView(res, viewData: viewData);
}

String PartialHomeIntroView({Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  if (viewData['path'] == '/') {
    res +=
        ''' <header class="home-promo"> <div class="home-promo-header-wrapper"> <div class="container"> <div class="left"> <h3 class="moduleTitle heading-style-2 visible-first"> Кроссплатформенная разработка </h3> <h1 class="">на языке Dart</h1> <div class="quote"> <p>Магия перестаёт существовать после того, как вы понимаете, как она работает.</p> <p style="font-style:italic;">Tim Berners-Lee</p> </div> <a class="btn btn-primary" href="/posts"><span>Читать блог</span></a> </div> <div class="right"> <figure class="promo_img"> <img src="/public/images/home_promo_droid.png" alt=""> </figure> </div> </div> </div> </header> ''';
  }
  return res;
}

String LayoutView(String model, {Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res +=
      '''<!DOCTYPE html> <html lang="ru"> <head> <meta charset="utf-8"> <meta http-equiv="X-UA-Compatible" content="IE=edge"> <meta name="viewport" content="width=device-width, initial-scale=1"> <meta name="keywords" content="''';
  res += '''${sanitize(viewData['MetaKeywords'])}''';
  res += '''"> <meta name="description" content="''';
  res += '''${sanitize(viewData['MetaDescription'])}''';
  res +=
      '''"> <link rel="alternate" type="application/rss+xml" title="ITBlog rss" href="/rss" /> ''';
  res += '''${PartialSharedFaviconView(viewData: viewData)}''';
  if (viewData['title'] != null) {
    res += ''' <title>''';
    res += '''${sanitize(viewData['title'])}''';
    res += ''' | ''';
    res += '''${sanitize(viewData['name'])}''';
    res += '''</title> ''';
  } else {
    res += ''' <title>''';
    res += '''${sanitize(viewData['name'])}''';
    res += '''</title> ''';
  }
  if (viewData['meta_description'] != null &&
      viewData['meta_description'] != '') {
    res += ''' <meta name="description" content="''';
    res += '''${sanitize(viewData['meta_description'])}''';
    res += '''"> ''';
  }
  res += ''' <meta name="author" content="Denis Bakhtin"> ''';
  if (viewData['canonical'] != null) {
    res += ''' <link rel="canonical" href="''';
    res += '''${sanitize(viewData['canonical'])}''';
    res += '''" /> ''';
  }
  if (viewData['prev'] != null) {
    res += ''' <link rel="prev" href="''';
    res += '''${sanitize(viewData['prev'])}''';
    res += '''" /> ''';
  }
  if (viewData['next'] != null) {
    res += ''' <link rel="next" href="''';
    res += '''${sanitize(viewData['next'])}''';
    res += '''" /> ''';
  }
  res +=
      ''' <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500&display=swap" rel="stylesheet"> <link rel="stylesheet" href="/public/assets/application.css"> </head> <body class="public-body"> ''';
  res += '''${PartialSharedSupnavbarView(viewData: viewData)}''';
  res += '''${PartialSharedNavbarView(viewData: viewData)}''';
  res += '''${PartialHomeIntroView(viewData: viewData)}''';
  res += ''' <div class="container content-wrapper" role="main"> ''';
  res += '''${model}''';
  res += '''${PartialSharedSidebarView(viewData: viewData)}''';
  res += ''' </div> ''';
  res += '''${PartialSharedFooterView(viewData: viewData)}''';
  res +=
      ''' <!-- Include all compiled plugins (below), or include individual files as needed --> <script src="/public/assets/application.js"></script> </body> </html> ''';
  return res;
}

String LayoutDashboardView(String model,
    {Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res +=
      '''<!DOCTYPE html> <html lang="ru"> <head> <meta charset="utf-8"> <meta http-equiv="X-UA-Compatible" content="IE=edge"> <meta name="viewport" content="width=device-width, initial-scale=1"> <meta name="keywords" content="''';
  res += '''${sanitize(viewData['MetaKeywords'])}''';
  res += '''"> <meta name="description" content="''';
  res += '''${sanitize(viewData['MetaDescription'])}''';
  res +=
      '''"> <link rel="alternate" type="application/rss+xml" title="ITBlog rss" href="/rss" /> ''';
  res += '''${PartialSharedFaviconView(viewData: viewData)}''';
  res += ''' <title>''';
  res += '''${sanitize(viewData["title"])}''';
  res +=
      '''</title> <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500&display=swap" rel="stylesheet"> <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" integrity="sha512-nMNlpuaDPrqlEls3IX/Q56H36qvBASwb3ipuo3MxeWbsQB1881ox0cRv7UPTgBlriqoynt35KjEwgGUeUXIPnw==" crossorigin="anonymous" referrerpolicy="no-referrer" /> <link rel="stylesheet" href="/public/assets/application.css"> </head> <body class="dashboard-body"> ''';
  res += '''${PartialDashboardNavbarView(viewData: viewData)}''';
  res += ''' <div class="content-wrapper"> ''';
  res += '''${PartialDashboardSidebarView(viewData: viewData)}''';
  res += '''${model}''';
  res += ''' </div> ''';
  res += '''${PartialDashboardFooterView(viewData: viewData)}''';
  res +=
      ''' <!-- Include all compiled plugins (below), or include individual files as needed --> <script src="/public/assets/application.js"></script> <script src="https://code.jquery.com/jquery-3.6.0.slim.min.js" integrity="sha256-u7e5khyithlIdTpu22PHhENmPcRdFiHRjhAuHcs05RI=" crossorigin="anonymous"></script> <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js" integrity="sha512-2ImtlRlf2VVmiGZsjm9bEyhjGW4dU7B6TNwh/hx/iSByxNENtj3WVE6o/9Lj4TJeVXPi4bnOIMXFIJJAeufa0A==" crossorigin="anonymous" referrerpolicy="no-referrer"></script> </body> </html> ''';
  return res;
}

String MailingsFormView(Mailing model,
    {Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  viewData['title'] = 'Создание / Редактирование Рассылки';
  res +=
      ''' <div class="main-content" role="main"> <form method="post"> <fieldset> <legend>''';
  res += '''${sanitize(viewData["title"])}''';
  res += '''</legend> ''';
  res += '''${PartialSharedMessagesView(viewData: viewData)}''';
  res += ''' <input type="hidden" name="id" value="''';
  res += '''${sanitize(model.id)}''';
  res +=
      '''" > <label for="title">Заголовок</label> <input id="title" name="title" value="''';
  res += '''${sanitize(model.title)}''';
  res +=
      '''" required=""> <label for="ck-content">Содержание</label> <textarea name="content" id="ck-content">''';
  res += '''${sanitize(model.content)}''';
  res += '''</textarea> <button type="submit" class="btn btn-primary">''';
  res += '''${PartialSharedMdiCheckView(viewData: viewData)}''';
  res += ''' Отправить</button> <a class="btn btn-secondary" href="''';
  res += '''${sanitize(Mailing.indexUrl)}''';
  res += '''">''';
  res += '''${PartialSharedMdiCancelView(viewData: viewData)}''';
  res +=
      ''' Отмена</a> </fieldset> </form> </div> <script src="/public/assets/ckeditor/ckeditor.js"></script> ''';
  return LayoutDashboardView(res, viewData: viewData);
}

String MailingsIndexView(List<Mailing> model,
    {Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  viewData['title'] = 'Рассылки';
  res += ''' <div class="main-content" role="main"> <h2>''';
  res += '''${sanitize(viewData["title"])}''';
  res +=
      '''</h2> <table> <thead> <tr> <th class="shrink">№</th> <th>Заголовок</th> <th class="shrink">Действия</th> </tr> </thead> <tbody> ''';
  for (var i = 0; i < model.length; i++) {
    var mailing = model[i];
    res += ''' <tr> <td class="shrink">''';
    res += '''${sanitize(mailing.id)}''';
    res += '''</td> <td>''';
    res += '''${sanitize(mailing.title)}''';
    res += '''</td> <td class="shrink"> <a href="''';
    res += '''${sanitize(mailing.url)}''';
    res += '''" class="btn btn-secondary">''';
    res += '''${PartialSharedMdiEyeView(viewData: viewData)}''';
    res += '''</a> <a href="''';
    res += '''${sanitize(mailing.editUrl)}''';
    res += '''" class="btn btn-primary">''';
    res += '''${PartialSharedMdiPencilView(viewData: viewData)}''';
    res += '''</a> <form class="inline-block" action="''';
    res += '''${sanitize(mailing.deleteUrl)}''';
    res +=
        '''" method="post"> <button type="button" class="btn btn-danger" onclick="((confirm('Вы уверены?')) ? this.form.submit() : null);">''';
    res += '''${PartialSharedMdiDeleteView(viewData: viewData)}''';
    res += '''</button> </form> </td> </tr> ''';
  }
  res += ''' </tbody> </table> <div class="actions"> <a href="''';
  res += '''${sanitize(Mailing.newUrl)}''';
  res += '''" class="btn btn-primary">''';
  res += '''${PartialSharedMdiPlusView(viewData: viewData)}''';
  res += ''' Новая рассылка</a> </div> </div> ''';
  return LayoutDashboardView(res, viewData: viewData);
}

String MailingsShowView(Mailing model,
    {Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  viewData['title'] = model.title;
  res += ''' <div id="main-column"> <h1>''';
  res += '''${sanitize(model.title)}''';
  res += '''</h1> <div class="content">''';
  res += '''${sanitize(model.content)}''';
  res += '''</div> </div> ''';
  return LayoutView(res, viewData: viewData);
}

String PagesFormView(Page model, {Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  viewData['title'] = 'Создание / Редактирование Страницы';
  res +=
      ''' <div class="main-content" role="main"> <form method="post"> <h3>''';
  res += '''${sanitize(viewData["title"])}''';
  res += '''</h3> ''';
  res += '''${PartialSharedMessagesView(viewData: viewData)}''';
  res += ''' <input type="hidden" name="id" value="''';
  res += '''${sanitize(model.id)}''';
  res +=
      '''"> <label for="title">Заголовок</label> <input id="title" name="title" value="''';
  res += '''${sanitize(model.title)}''';
  res +=
      '''" required="" > <label for="ck-content">Содержание</label> <textarea name="content" id="ck-content">''';
  res += '''${sanitize(model.content)}''';
  res +=
      '''</textarea> <label>Мета описание</label> <textarea name="meta_description" id="meta_description">''';
  res += '''${sanitize(model.metaDescription)}''';
  res +=
      '''</textarea> <div class="d-flex mb-10"> <input id="published" name="published" type="checkbox" value="1" ''';
  if (model.published == 1) {
    res += '''checked''';
  }
  res +=
      ''' > <label for="published">Опубликовать</label> </div> <button type="submit" class="btn btn-primary">Отправить</button> <a class="btn btn-secondary" href="''';
  res += '''${sanitize(Page.indexUrl)}''';
  res +=
      '''">Отмена</a> </form> </div> <script src="/public/assets/ckeditor/ckeditor.js"></script> ''';
  return LayoutDashboardView(res, viewData: viewData);
}

String PagesIndexView(List<Page> model,
    {Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  viewData['title'] = 'Страницы';
  res += ''' <div class="main-content" role="main"> <h2>''';
  res += '''${sanitize(viewData["title"])}''';
  res +=
      '''</h2> <table> <thead> <tr> <th class="shrink">№</th> <th>Заголовок</th> <th class="shrink">Опубликовано</th> <th class="shrink">Действия</th> </tr> </thead> <tbody> ''';
  for (var i = 0; i < model.length; i++) {
    var page = model[i];
    res += ''' <tr> <td class="shrink">''';
    res += '''${sanitize(page.id)}''';
    res += '''</td> <td>''';
    res += '''${sanitize(page.title)}''';
    res += '''</td> <td class="shrink"> ''';
    if (page.published == 1) {
      res += '''${PartialSharedMdiCheckView(viewData: viewData)}''';
    } else {
      res += '''${PartialSharedMdiMinusView(viewData: viewData)}''';
    }
    res += ''' </td> <td class="shrink"> <a href="''';
    res += '''${sanitize(page.url)}''';
    res += '''" class="btn btn-secondary">''';
    res += '''${PartialSharedMdiEyeView(viewData: viewData)}''';
    res += '''</a> <a href="''';
    res += '''${sanitize(page.editUrl)}''';
    res += '''" class="btn btn-primary">''';
    res += '''${PartialSharedMdiPencilView(viewData: viewData)}''';
    res += '''</a> <form class="inline-block" action="''';
    res += '''${sanitize(page.deleteUrl)}''';
    res +=
        '''" method="post"> <button type="button" class="btn btn-danger" onclick="((confirm('Вы уверены?')) ? this.form.submit() : null);">''';
    res += '''${PartialSharedMdiDeleteView(viewData: viewData)}''';
    res += '''</button> </form> </td> </tr> ''';
  }
  res += ''' </tbody> </table> <div class="actions"> <a href="''';
  res += '''${sanitize(Page.newUrl)}''';
  res += '''" class="btn btn-primary">Новая страница</a> </div> </div> ''';
  return LayoutDashboardView(res, viewData: viewData);
}

String PagesShowView(Page model, {Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res += ''' <div id="main-column"> <h1>''';
  res += '''${sanitize(model.title)}''';
  res += '''</h1> <div class="content">''';
  res += '''${sanitize(model.content)}''';
  res += '''</div> </div> ''';
  return LayoutView(res, viewData: viewData);
}

String PostsFormView(Post model, {Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  viewData['title'] = 'Создание / Редактирование Записи';
  res +=
      ''' <div class="main-content" role="main"> <form method="post"> <h3>''';
  res += '''${sanitize(viewData["title"])}''';
  res += '''</h3> ''';
  res += '''${PartialSharedMessagesView(viewData: viewData)}''';
  res += ''' <input type="hidden" name="id" value="''';
  res += '''${sanitize(model.id)}''';
  res +=
      '''" > <label for="title">Заголовок</label> <input id="title" name="title" value="''';
  res += '''${sanitize(model.title)}''';
  res +=
      '''" required=""> <label for="ck-content">Содержание</label> <textarea name="content" id="ck-content">''';
  res += '''${sanitize(model.content)}''';
  res +=
      '''</textarea> <label for="tags">Тэги</label> <select id="tags" name="tags[]" multiple="multiple"> ''';
  var tags = getTags();
  for (var i = 0; i < tags.length; i++) {
    var tag = tags[i];
    if (model.tags?.any((e) => e.id == tag.id) ?? false) {
      res += ''' <option selected>''';
      res += '''${sanitize(tag.title)}''';
      res += '''</option> ''';
    } else {
      res += ''' <option>''';
      res += '''${sanitize(tag.title)}''';
      res += '''</option> ''';
    }
  }
  res +=
      ''' </select> <label>Мета описание</label> <textarea name="meta_description" id="meta_description">''';
  res += '''${sanitize(model.metaDescription)}''';
  res +=
      '''</textarea> <div class="d-flex mb-10"> <input id="published" name="published" type="checkbox" value="1" ''';
  if (model.published == 1) {
    res += '''checked''';
  }
  res +=
      '''> <label for="published">Опубликовать</label> </div> <button type="submit" class="btn btn-primary">''';
  res += '''${PartialSharedMdiCheckView(viewData: viewData)}''';
  res += ''' Отправить</button> <a class="btn btn-secondary" href="''';
  res += '''${sanitize(Post.indexUrl)}''';
  res += '''">''';
  res += '''${PartialSharedMdiCancelView(viewData: viewData)}''';
  res +=
      ''' Отмена</a> </form> </div> <script src="/public/assets/ckeditor/ckeditor.js"></script> ''';
  return LayoutDashboardView(res, viewData: viewData);
}

String PostsIndexView(List<Post> model,
    {Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  viewData['title'] = 'Записи';
  res += ''' <div class="main-content" role="main"> <h2>''';
  res += '''${sanitize(viewData["title"])}''';
  res +=
      '''</h2> <table> <thead> <tr> <th class="shrink">№</th> <th>Заголовок</th> <th class="shrink">Опубликовано</th> <th class="shrink">Действия</th> </tr> </thead> <tbody> ''';
  for (var i = 0; i < model.length; i++) {
    var post = model[i];
    res += ''' <tr> <td class="shrink">''';
    res += '''${sanitize(post.id)}''';
    res += '''</td> <td>''';
    res += '''${sanitize(post.title)}''';
    res += '''</td> <td class="shrink"> ''';
    if (post.published == 1) {
      res += '''${PartialSharedMdiCheckView(viewData: viewData)}''';
    } else {
      res += '''${PartialSharedMdiMinusView(viewData: viewData)}''';
    }
    res += ''' </td> <td class="shrink"> <a href="''';
    res += '''${sanitize(post.url)}''';
    res += '''" class="btn btn-secondary">''';
    res += '''${PartialSharedMdiEyeView(viewData: viewData)}''';
    res += '''</a> <a href="''';
    res += '''${sanitize(post.editUrl)}''';
    res += '''" class="btn btn-primary">''';
    res += '''${PartialSharedMdiPencilView(viewData: viewData)}''';
    res += '''</a> <form class="inline-block" action="''';
    res += '''${sanitize(post.deleteUrl)}''';
    res +=
        '''" method="post"> <button type="button" class="btn btn-danger" onclick="((confirm('Вы уверены?')) ? this.form.submit() : null);">''';
    res += '''${PartialSharedMdiDeleteView(viewData: viewData)}''';
    res += '''</button> </form> </td> </tr> ''';
  }
  res += ''' </tbody> </table> <div class="actions"> <a href="''';
  res += '''${sanitize(Post.newUrl)}''';
  res += '''" class="btn btn-primary">''';
  res += '''${PartialSharedMdiPlusView(viewData: viewData)}''';
  res += ''' Новая запись</a> </div> </div> ''';
  return LayoutDashboardView(res, viewData: viewData);
}

String PostsPublicIndexView(List<Post> model,
    {Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  final paginator = viewData['paginator'] as List<Pagination>;
  res += ''' <div id="main-column"> <h1>''';
  res += '''${sanitize(viewData["title"])}''';
  res += '''</h1> ''';
  for (var i = 0; i < model.length; i++) {
    res += '''${PartialPostsPreviewView(model[i], viewData: viewData)}''';
  }
  if (paginator.isNotEmpty) {
    res += ''' <nav class="pagination-wrapper"> <ul class="pagination"> ''';
    for (var p in paginator) {
      res += ''' <li class="''';
      res += '''${sanitize(p.active ? 'active' : '')}''';
      res += '''"><a href="''';
      res += '''${sanitize(p.url)}''';
      res += '''">''';
      res += '''${sanitize(p.title)}''';
      res += '''</a></li> ''';
    }
    res += ''' </ul> </nav> ''';
  }
  res += ''' </div>''';
  return LayoutView(res, viewData: viewData);
}

String PostsShowView(Post model, {Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res +=
      '''${PartialSharedBreadcrumbsView(model.breadcrumbs, viewData: viewData)}''';
  res += ''' <div id="main-column"> <h1> ''';
  res += '''${sanitize(model.title)}''';
  if (viewData['isAuthenticated'] ?? false) {
    res += ''' <a class="btn btn-outline-primary" href="''';
    res += '''${sanitize(model.editUrl)}''';
    res += '''">''';
    res += '''${PartialSharedMdiPencilView(viewData: viewData)}''';
    res += ''' Редактировать</a> ''';
  }
  res += ''' </h1> ''';
  res += '''${PartialPostsInfoView(model, viewData: viewData)}''';
  res += ''' <div class="content">''';
  res += '''${sanitize(model.content)}''';
  res +=
      '''</div> <div class="comments-wrapper"> <div id="comments-form"> <button class="btn btn-primary" onclick="loadCommentsForm(''';
  res += '''${sanitize(model.id)}''';
  res +=
      ''')">Оставить комментарий!</button> </div> </div> <div id="comments"> ''';
  var length = model.comments?.length ?? 0;
  if (length > 0) {
    res += ''' <h4>Комментарии</h4> ''';
  }
  for (var i = 0; i < length; i++) {
    var comment = model.comments![i];
    res += ''' <div class="comment" id="comment-''';
    res += '''${sanitize(comment.id)}''';
    res += '''"> <h6>''';
    res += '''${sanitize(comment.plainName)}''';
    res += '''</h6> <div class="comment-content"> ''';
    res += '''${sanitize(comment.plainContent)}''';
    res += ''' </div> </div> ''';
  }
  res += ''' </div> </div> ''';
  return LayoutView(res, viewData: viewData);
}

String PartialPostsInfoView(Post model,
    {Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res +=
      ''' <div class="post-info"> <span class="post-info-item"> <a href="#comments">''';
  res += '''${PartialSharedMdiCommentView(viewData: viewData)}''';
  res += '''${sanitize(model.comments?.length ?? 0)}''';
  res += '''</a> </span> <span class="post-info-item"> ''';
  var length = model.tags?.length ?? 0;
  for (var i = 0; i < length; i++) {
    var tag = model.tags![i];
    res += ''' <a href="''';
    res += '''${sanitize(tag.url)}''';
    res += '''" class="label label-success">#''';
    res += '''${sanitize(tag.title)}''';
    res += '''</a> ''';
  }
  res += ''' </span> </div> ''';
  return res;
}

String PartialPostsPreviewView(Post model,
    {Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res += ''' <div class="post-preview"> <h2><a href="''';
  res += '''${sanitize(model.url)}''';
  res += '''">''';
  res += '''${sanitize(model.title)}''';
  res += '''</a></h2> <a href="''';
  res += '''${sanitize(model.url)}''';
  res += '''"> <img src="''';
  res += '''${sanitize(model.getImage())}''';
  res += '''" /> </a> <div class="excerpt">''';
  res += '''${sanitize(model.excerpt)}''';
  res += '''</div> </div> ''';
  return res;
}

String PartialSharedBreadcrumbsView(List<Breadcrumb> model,
    {Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  if (model.length > 0) {
    res +=
        ''' <nav class="breadcrumb-wrapper" aria-label="breadcrumb"> <div class="container"> <ol class="breadcrumb"> ''';
    for (var i = 0; i < model.length; i++) {
      var crumb = model[i];
      if (crumb.url.isNotEmpty) {
        res += ''' <li class="breadcrumb-item"> <a href="/">''';
        res += '''${sanitize(crumb.title)}''';
        res += '''</a> </li> ''';
      } else {
        res += ''' <li class="breadcrumb-item active" aria-current="page">''';
        res += '''${sanitize(crumb.title)}''';
        res += '''</li> ''';
      }
    }
    res += ''' </ol> </div> </nav> ''';
  }
  return res;
}

String PartialSharedFaviconView({Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res +=
      '''<link rel="apple-touch-icon" sizes="180x180" href="/public/images/apple-touch-icon.png"> <link rel="icon" type="image/png" sizes="32x32" href="/public/images/favicon-32x32.png"> <link rel="icon" type="image/png" sizes="16x16" href="/public/images/favicon-16x16.png"> <link rel="manifest" href="/public/images/site.webmanifest"> <link rel="mask-icon" href="/public/images/safari-pinned-tab.svg" color="#5bbad5"> <meta name="msapplication-TileColor" content="#da532c"> <meta name="theme-color" content="#ffffff"> ''';
  return res;
}

String PartialSharedFooterView({Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res +=
      '''<footer id="footer"> <div class="footer-subscribe"> <div class="container"> <h3>Хотите быть в курсе свежих публикаций?</h3> <p>Подпишитесь на рассылку</p> <form action="/subscribers/new" method="post" class="form-inline"> <div class="form-group"> <input name="email" type="email" placeholder="Эл. адрес:" /> <button type="submit" class="btn btn-secondary">Подписаться</button> </div> </form> </div> </div> <div class="footer-nav"> <div class="container"> <div class="left"> <h4><span class="text-primary">IT</span> Blog</h4> <p>Блог о разработке ПО в современном <span class="line-through">и не очень стиле</span>: от написания сервисов, до анимаций.</p> </div> <div class="right"> <h5>Связаться</h5> <p> По вопросам сотрудничества:<br> <a href="mailto:denis.bakhtin@gmail.com" class="contact-link">''';
  res += '''${PartialSharedMdiEmailView(viewData: viewData)}''';
  res +=
      ''' denis.bakhtin@gmail.com</a> </p> </div> </div> </div> </div> <div class="footer-copyright"> <div class="container"> <p>&copy; ''';
  res += '''${sanitize(now().year)}''';
  res += ''' <span class="strong">''';
  res += '''${sanitize(getSiteName())}''';
  res += '''</span> by Denis Bakhtin. </div> </div> </footer> ''';
  return res;
}

String PartialSharedMdiCancelView({Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res +=
      '''<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" width="1em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24"><path d="M12 2c5.5 0 10 4.5 10 10s-4.5 10-10 10S2 17.5 2 12S6.5 2 12 2m0 2c-1.9 0-3.6.6-4.9 1.7l11.2 11.2c1-1.4 1.7-3.1 1.7-4.9c0-4.4-3.6-8-8-8m4.9 14.3L5.7 7.1C4.6 8.4 4 10.1 4 12c0 4.4 3.6 8 8 8c1.9 0 3.6-.6 4.9-1.7z" fill="currentColor"/></svg>''';
  return res;
}

String PartialSharedMdiCheckView({Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res +=
      '''<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" width="1em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24"><path d="M21 7L9 19l-5.5-5.5l1.41-1.41L9 16.17L19.59 5.59L21 7z" fill="currentColor"/></svg>''';
  return res;
}

String PartialSharedMdiChevronRightView(
    {Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res +=
      '''<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" width="1em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24"><path d="M8.59 16.58L13.17 12L8.59 7.41L10 6l6 6l-6 6l-1.41-1.42z" fill="currentColor"/></svg>''';
  return res;
}

String PartialSharedMdiCogsView({Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res +=
      '''<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" width="1em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24"><path d="M15.9 18.45c1.35 0 2.45-1.1 2.45-2.45s-1.1-2.45-2.45-2.45c-1.36 0-2.45 1.1-2.45 2.45s1.09 2.45 2.45 2.45m5.2-1.77l1.48 1.16c.13.11.17.29.08.45l-1.4 2.42a.35.35 0 0 1-.43.15l-1.74-.7c-.36.28-.76.51-1.18.69l-.27 1.85c-.02.17-.17.3-.34.3h-2.8c-.18 0-.32-.13-.35-.3l-.26-1.85c-.43-.18-.82-.41-1.18-.69l-1.75.7c-.15.06-.34 0-.42-.15l-1.4-2.42a.351.351 0 0 1 .08-.45l1.48-1.16l-.05-.68l.05-.69l-1.48-1.15a.353.353 0 0 1-.08-.45l1.4-2.42c.08-.16.27-.22.42-.16l1.75.71c.36-.28.75-.52 1.18-.69l.26-1.86c.03-.16.17-.29.35-.29h2.8c.17 0 .32.13.34.29l.27 1.86c.42.17.82.41 1.18.69l1.74-.71c.17-.06.34 0 .43.16l1.4 2.42c.09.15.05.34-.08.45l-1.48 1.15l.05.69l-.05.68M6.69 8.07c.87 0 1.57-.7 1.57-1.57c0-.87-.7-1.58-1.57-1.58A1.58 1.58 0 0 0 5.11 6.5c0 .87.71 1.57 1.58 1.57m3.34-1.13l.97.74c.07.07.09.19.03.29l-.9 1.56c-.05.1-.17.14-.27.1l-1.12-.45l-.74.44l-.19 1.19c-.02.11-.11.19-.22.19h-1.8c-.12 0-.21-.08-.23-.19L5.4 9.62l-.76-.44l-1.14.45c-.09.04-.2 0-.26-.1l-.9-1.56c-.06-.1-.03-.22.05-.29l.95-.74l-.03-.44l.03-.44l-.95-.74a.229.229 0 0 1-.05-.29l.9-1.56c.06-.1.17-.14.26-.1l1.13.45l.77-.44l.16-1.19c.02-.11.11-.19.23-.19h1.8c.11 0 .2.08.22.19L8 3.38l.74.44l1.12-.45c.1-.04.22 0 .27.1l.9 1.56c.06.1.04.22-.03.29l-.97.74l.03.44l-.03.44z" fill="currentColor"/></svg>''';
  return res;
}

String PartialSharedMdiCommentView({Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res +=
      '''<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" width="1em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24"><path d="M9 22a1 1 0 0 1-1-1v-3H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6.1l-3.7 3.71c-.2.19-.45.29-.7.29H9z" fill="currentColor"/></svg>''';
  return res;
}

String PartialSharedMdiDeleteView({Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res +=
      '''<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" width="1em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24"><path d="M19 4h-3.5l-1-1h-5l-1 1H5v2h14M6 19a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V7H6v12z" fill="currentColor"/></svg>''';
  return res;
}

String PartialSharedMdiEmailView({Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res +=
      '''<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" width="1em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24"><path d="M22 6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6m-2 0l-8 5l-8-5h16m0 12H4V8l8 5l8-5v10z" fill="currentColor"/></svg>''';
  return res;
}

String PartialSharedMdiEyeView({Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res +=
      '''<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" width="1em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24"><path d="M12 9a3 3 0 0 0-3 3a3 3 0 0 0 3 3a3 3 0 0 0 3-3a3 3 0 0 0-3-3m0 8a5 5 0 0 1-5-5a5 5 0 0 1 5-5a5 5 0 0 1 5 5a5 5 0 0 1-5 5m0-12.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5z" fill="currentColor"/></svg>''';
  return res;
}

String PartialSharedMdiFacebookView(
    {Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res +=
      '''<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" width="1em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24"><path d="M12 2.04c-5.5 0-10 4.49-10 10.02c0 5 3.66 9.15 8.44 9.9v-7H7.9v-2.9h2.54V9.85c0-2.51 1.49-3.89 3.78-3.89c1.09 0 2.23.19 2.23.19v2.47h-1.26c-1.24 0-1.63.77-1.63 1.56v1.88h2.78l-.45 2.9h-2.33v7a10 10 0 0 0 8.44-9.9c0-5.53-4.5-10.02-10-10.02z" fill="currentColor"/></svg>''';
  return res;
}

String PartialSharedMdiLogoutView({Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res +=
      '''<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" width="1em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24"><path d="M16 17v-3H9v-4h7V7l5 5l-5 5M14 2a2 2 0 0 1 2 2v2h-2V4H5v16h9v-2h2v2a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9z" fill="currentColor"/></svg>''';
  return res;
}

String PartialSharedMdiMinusView({Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res +=
      '''<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" width="1em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24"><path d="M19 13H5v-2h14v2z" fill="currentColor"/></svg>''';
  return res;
}

String PartialSharedMdiPencilView({Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res +=
      '''<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" width="1em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24"><path d="M16.84 2.73c-.39 0-.77.15-1.07.44l-2.12 2.12l5.3 5.31l2.12-2.1c.6-.61.6-1.56 0-2.14L17.9 3.17c-.3-.29-.68-.44-1.06-.44M12.94 6l-8.1 8.11l2.56.28l.18 2.29l2.28.17l.29 2.56l8.1-8.11m-14 3.74L2.5 21.73l6.7-1.79l-.24-2.16l-2.31-.17l-.18-2.32" fill="currentColor"/></svg>''';
  return res;
}

String PartialSharedMdiPlusView({Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res +=
      '''<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" width="1em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24"><path d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z" fill="currentColor"/></svg>''';
  return res;
}

String PartialSharedMdiTwitterView({Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res +=
      '''<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" width="1em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24"><path d="M22.46 6c-.77.35-1.6.58-2.46.69c.88-.53 1.56-1.37 1.88-2.38c-.83.5-1.75.85-2.72 1.05C18.37 4.5 17.26 4 16 4c-2.35 0-4.27 1.92-4.27 4.29c0 .34.04.67.11.98C8.28 9.09 5.11 7.38 3 4.79c-.37.63-.58 1.37-.58 2.15c0 1.49.75 2.81 1.91 3.56c-.71 0-1.37-.2-1.95-.5v.03c0 2.08 1.48 3.82 3.44 4.21a4.22 4.22 0 0 1-1.93.07a4.28 4.28 0 0 0 4 2.98a8.521 8.521 0 0 1-5.33 1.84c-.34 0-.68-.02-1.02-.06C3.44 20.29 5.7 21 8.12 21C16 21 20.33 14.46 20.33 8.79c0-.19 0-.37-.01-.56c.84-.6 1.56-1.36 2.14-2.23z" fill="currentColor"/></svg>''';
  return res;
}

String PartialSharedMdiWebView({Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res +=
      '''<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" width="1em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24"><path d="M16.36 14c.08-.66.14-1.32.14-2c0-.68-.06-1.34-.14-2h3.38c.16.64.26 1.31.26 2s-.1 1.36-.26 2m-5.15 5.56c.6-1.11 1.06-2.31 1.38-3.56h2.95a8.03 8.03 0 0 1-4.33 3.56M14.34 14H9.66c-.1-.66-.16-1.32-.16-2c0-.68.06-1.35.16-2h4.68c.09.65.16 1.32.16 2c0 .68-.07 1.34-.16 2M12 19.96c-.83-1.2-1.5-2.53-1.91-3.96h3.82c-.41 1.43-1.08 2.76-1.91 3.96M8 8H5.08A7.923 7.923 0 0 1 9.4 4.44C8.8 5.55 8.35 6.75 8 8m-2.92 8H8c.35 1.25.8 2.45 1.4 3.56A8.008 8.008 0 0 1 5.08 16m-.82-2C4.1 13.36 4 12.69 4 12s.1-1.36.26-2h3.38c-.08.66-.14 1.32-.14 2c0 .68.06 1.34.14 2M12 4.03c.83 1.2 1.5 2.54 1.91 3.97h-3.82c.41-1.43 1.08-2.77 1.91-3.97M18.92 8h-2.95a15.65 15.65 0 0 0-1.38-3.56c1.84.63 3.37 1.9 4.33 3.56M12 2C6.47 2 2 6.5 2 12a10 10 0 0 0 10 10a10 10 0 0 0 10-10A10 10 0 0 0 12 2z" fill="currentColor"/></svg>''';
  return res;
}

String PartialSharedMessagesView({Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  var messages = getSessionMessages();
  for (var i = 0; i < messages.length; i++) {
    res += ''' <div class="alert alert-danger col-sm-12">''';
    res += '''${sanitize(messages)}''';
    res += '''[i]</div> ''';
  }
  return res;
}

String PartialSharedNavbarView({Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res +=
      '''<!-- Fixed navbar --> <nav class="navbar" role="navigation"> <div class="container"> <ul> <li><a href="/">Главная</a></li> <li><a href="/posts">Блог</a></li> </ul> ''';
  if (viewData['isAuthenticated'] ?? false) {
    res +=
        ''' <ul> <li> <a href="/admin/posts/">Панель</a> </li> <li> <a href="/auth/signout">Выйти</a> </li> </ul> ''';
  } else {
    res += ''' <ul> <li><a href="/auth/signin">Вход</a></li> ''';
    if (isSignupEnabled()) {
      res += ''' <li><a href="/auth/signup">Регистрация</a></li> ''';
    }
    res += ''' </ul> ''';
  }
  res += ''' </div> </nav> ''';
  return res;
}

String PartialSharedPaginatorView({Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  var pagination = viewData["pagination"];
  if (pagination != null) {
    res +=
        ''' <div class="text-center my-4"> <nav aria-label="Список страниц" class="pagination-nav"> <ul class="pagination"> ''';
    for (var i = 0; i < pagination.length; i++) {
      var page = pagination[i];
      if (page.url.length > 0) {
        res += ''' <li class="page-item"><a class="page-link" href="''';
        res += '''${sanitize(page.url)}''';
        res += '''">''';
        res += '''${sanitize(page.title)}''';
        res += '''</a></li> ''';
      } else {
        res +=
            ''' <li class="page-item disabled"> <a class="page-link" href="#" tabindex="-1" aria-disabled="true">''';
        res += '''${sanitize(page.title)}''';
        res += '''</a> </li> ''';
      }
    }
    res += ''' </ul> </nav> </div> ''';
  }
  return res;
}

String PartialSharedSidebarView({Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  if (!(viewData['hideSidebar'] ?? false)) {
    res +=
        ''' <aside id="sidebar"> <nav> <h5>Тэги</h5> <ul class="nav sidebar-tags"> ''';
    var tags = getTags();
    for (var i = 0; i < tags.length; i++) {
      var tag = tags[i];
      res += ''' <li> <a href="''';
      res += '''${sanitize(tag.url)}''';
      res += '''">''';
      res += '''${sanitize(tag.title)}''';
      res += '''</a> </li> ''';
    }
    res +=
        ''' </ul> <h5>Последние записи</h5> <ul class="nav sidebar-posts"> ''';
    var recentPosts = getRecentPosts();
    for (var i = 0; i < recentPosts.length; i++) {
      var post = recentPosts[i];
      res += ''' <li> <a href="''';
      res += '''${sanitize(post.url)}''';
      res += '''"> ''';
      var src = post.getImage();
      if (src.length > 0) {
        res += ''' <img src="''';
        res += '''${sanitize(post.getImage())}''';
        res += '''" /> ''';
      }
      res += ''' <h6>''';
      res += '''${sanitize(post.title)}''';
      res += '''</h6> </a> </li> ''';
    }
    res += ''' </ul> <h5>Архив</h5> <ul class="nav sidebar-archive"> ''';
    var archives = getArchives();
    for (var i = 0; i < archives.length; i++) {
      var arch = archives[i];
      res += ''' <li> <a href="''';
      res += '''${sanitize(arch.url)}''';
      res += '''"> ''';
      res += '''${PartialSharedMdiChevronRightView(viewData: viewData)}''';
      res += '''${sanitize(arch.title)}''';
      res += ''' </a> </li> ''';
    }
    res += ''' </ul> </nav> </aside> ''';
  }
  return res;
}

String PartialSharedSupnavbarView({Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res += '''<div class="supnavbar"> <div class="container"> <a href="#">''';
  res += '''${PartialSharedMdiTwitterView(viewData: viewData)}''';
  res += '''</span></a> <a href="#">''';
  res += '''${PartialSharedMdiFacebookView(viewData: viewData)}''';
  res += '''</a> </div> </div> ''';
  return res;
}

String SubscribersFormView(Subscriber model,
    {Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  viewData['title'] = 'Редактирование подписчика';
  res +=
      ''' <div class="main-content" role="main"> <form method="post"> <h3>''';
  res += '''${sanitize(viewData["title"])}''';
  res += '''</h3> ''';
  res += '''${PartialSharedMessagesView(viewData: viewData)}''';
  res += ''' <input type="hidden" name="id" value="''';
  res += '''${sanitize(model.id)}''';
  res +=
      '''" > <label for="email">Эл. почта</label> <input id="email" name="email" value="''';
  res += '''${sanitize(model.email)}''';
  res += '''" required=""> <button type="submit" class="btn btn-primary">''';
  res += '''${PartialSharedMdiCheckView(viewData: viewData)}''';
  res += ''' Отправить</button> <a class="btn btn-secondary" href="''';
  res += '''${sanitize(Subscriber.indexUrl)}''';
  res += '''">''';
  res += '''${PartialSharedMdiCancelView(viewData: viewData)}''';
  res += ''' Отмена</a> </form> </div> ''';
  return LayoutDashboardView(res, viewData: viewData);
}

String SubscribersIndexView(List<Subscriber> model,
    {Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  viewData['title'] = 'Подписчики';
  res += ''' <div class="main-content" role="main"> <h2>''';
  res += '''${sanitize(viewData["title"])}''';
  res +=
      '''</h2> <table> <thead> <tr> <th class="shrink">№</th> <th>Эл. почта</th> <th class="shrink">Действия</th> </tr> </thead> <tbody> ''';
  for (var i = 0; i < model.length; i++) {
    var subscriber = model[i];
    res += ''' <tr> <td class="shrink">''';
    res += '''${sanitize(subscriber.id)}''';
    res += '''</td> <td>''';
    res += '''${sanitize(subscriber.email)}''';
    res += '''</td> <td class="shrink"> <a href="''';
    res += '''${sanitize(subscriber.editUrl)}''';
    res += '''" class="btn btn-primary">''';
    res += '''${PartialSharedMdiPencilView(viewData: viewData)}''';
    res += '''</a> <form class="inline-block" action="''';
    res += '''${sanitize(subscriber.deleteUrl)}''';
    res +=
        '''" method="post"> <button type="button" class="btn btn-danger" onclick="((confirm('Вы уверены?')) ? this.form.submit() : null);">''';
    res += '''${PartialSharedMdiDeleteView(viewData: viewData)}''';
    res += '''</button> </form> </td> </tr> ''';
  }
  res += ''' </tbody> </table> </div> ''';
  return LayoutDashboardView(res, viewData: viewData);
}

String TagsFormView(Tag model, {Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  viewData['title'] = 'Создание / Редактирование Тэга';
  res +=
      ''' <div class="main-content" role="main"> <form class="form-inline" method="post"> <h3>''';
  res += '''${sanitize(viewData["title"])}''';
  res += '''</h3> ''';
  res += '''${PartialSharedMessagesView(viewData: viewData)}''';
  res +=
      ''' <label for="title">Название</label> <input id="title" name="title" value="''';
  res += '''${sanitize(model.title)}''';
  res +=
      '''" required=""> <button type="submit" class="btn btn-primary">Отправить</button> <a class="btn btn-secondary" href="/admin/tags/">Отмена</a> </form> </div> <script src="/public/assets/ckeditor/ckeditor.js"></script> ''';
  return LayoutDashboardView(res, viewData: viewData);
}

String TagsIndexView(List<Tag> model,
    {Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  viewData['title'] = 'Тэги';
  res += ''' <div class="main-content" role="main"> <h2>''';
  res += '''${sanitize(viewData["title"])}''';
  res +=
      '''</h2> <table> <thead> <tr> <th>Название</th> <th class="shrink">Действия</th> </tr> </thead> <tbody> ''';
  for (var i = 0; i < model.length; i++) {
    var tag = model[i];
    res += ''' <tr> <td>''';
    res += '''${sanitize(tag.title)}''';
    res += '''</td> <td class="shrink"> <a href="''';
    res += '''${sanitize(tag.url)}''';
    res += '''" class="btn btn-secondary">''';
    res += '''${PartialSharedMdiEyeView(viewData: viewData)}''';
    res += '''</a> <form class="inline-block" action="''';
    res += '''${sanitize(tag.deleteUrl)}''';
    res +=
        '''" method="post"> <button type="button" class="btn btn-danger" onclick="((confirm('Вы уверены?')) ? this.form.submit() : null);">''';
    res += '''${PartialSharedMdiDeleteView(viewData: viewData)}''';
    res += '''</button> </form> </td> </tr> ''';
  }
  res +=
      ''' </tbody> </table> <div class="actions"> <a href="/admin/tags/new" class="btn btn-primary">Новый тэг</a> </div> </div> ''';
  return LayoutDashboardView(res, viewData: viewData);
}

String TagsShowView(Tag model, {Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res += ''' <div id="main-column"> <h1 class="title">''';
  res += '''${sanitize(viewData['title'])}''';
  res += '''</h1> ''';
  for (var i = 0; i < model.posts.length; i++) {
    res += '''${PartialPostsPreviewView(model.posts[i], viewData: viewData)}''';
  }
  res += ''' </div> ''';
  return LayoutView(res, viewData: viewData);
}

String UsersFormView(User model, {Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  res +=
      ''' <div class="main-content" role="main"> <form method="post"> <h3>Создание / Редактирование пользователя</h3> ''';
  res += '''${PartialSharedMessagesView(viewData: viewData)}''';
  res += ''' <input type="hidden" name="id" value="''';
  res += '''${sanitize(model.id)}''';
  res +=
      '''" > <label for="name">Имя</label> <input id="name" name="name" value="''';
  res += '''${sanitize(model.name)}''';
  res +=
      '''" required> <label for="email">Эл. адрес</label> <input id="email" name="email" value="''';
  res += '''${sanitize(model.email)}''';
  res +=
      '''" required> <label for="password">Пароль</label> <input id="password" name="password" type="password" required> <label for="passwordrepeat">Повторите пароль</label> <input id="passwordrepeat" name="passwordrepeat" type="password" required> <button type="submit" class="btn btn-primary">Отправить</button> <a class="btn btn-secondary" href="/admin/users/">Отмена</a> </form> </div>''';
  return LayoutDashboardView(res, viewData: viewData);
}

String UsersIndexView(List<User> model,
    {Map<String, dynamic> viewData = const {}}) {
  String res = '';
  viewData = Map.from(viewData);
  viewData['title'] = 'Пользователи';
  res += ''' <div class="main-content" role="main"> <h2>''';
  res += '''${sanitize(viewData["title"])}''';
  res +=
      '''</h2> <table> <thead> <tr> <th class="shrink">№</th> <th>Имя</th> <th>Эл. адрес</th> <th class="shrink">Действия</th> </tr> </thead> <tbody> ''';
  for (var i = 0; i < model.length; i++) {
    var user = model[i];
    res += ''' <tr> <td class="shrink">''';
    res += '''${sanitize(user.id)}''';
    res += '''</td> <td>''';
    res += '''${sanitize(user.name)}''';
    res += '''</td> <td>''';
    res += '''${sanitize(user.email)}''';
    res += '''</td> <td class="shrink"> <a href="''';
    res += '''${sanitize(user.editUrl)}''';
    res += '''" class="btn btn-primary">''';
    res += '''${PartialSharedMdiPencilView(viewData: viewData)}''';
    res += '''</a> <form class="inline-block" action="''';
    res += '''${sanitize(user.deleteUrl)}''';
    res +=
        '''" method="post"> <button type="button" class="btn btn-danger" onclick="((confirm('Вы уверены?')) ? this.form.submit() : null);">''';
    res += '''${PartialSharedMdiDeleteView(viewData: viewData)}''';
    res += '''</button> </form> </td> </tr> ''';
  }
  res += ''' </tbody> </table> <div class="actions"> <a href="''';
  res += '''${sanitize(User.newUrl)}''';
  res += '''" class="btn btn-primary">Новый пользователь</a> </div> </div> ''';
  return LayoutDashboardView(res, viewData: viewData);
}
